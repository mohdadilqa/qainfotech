"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unpack = unpack;

var _tarFs = _interopRequireDefault(require("tar-fs"));

var _zlib = _interopRequireDefault(require("zlib"));

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// see https://github.com/alixaxel/chrome-aws-lambda
function unpack({
  inputPath,
  outputBaseDir = `/tmp`,
  outputPath = `/tmp/instdir`
}) {
  return new Promise((resolve, reject) => {
    const input = _path.default.resolve(inputPath);

    const output = outputPath;

    if (_fs.default.existsSync(output) === true) {
      return resolve(output);
    }

    const source = _fs.default.createReadStream(input);

    const target = _tarFs.default.extract(outputBaseDir);

    source.on('error', error => {
      return reject(error);
    });
    target.on('error', error => {
      return reject(error);
    });
    target.on('finish', () => {
      _fs.default.chmod(output, '0755', error => {
        if (error) {
          return reject(error);
        }

        return resolve(output);
      });
    });
    source.pipe(_zlib.default.createBrotliDecompress()).pipe(target);
  });
}